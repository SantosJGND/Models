// this version of the recipe is meant to be passed arguments:
// - fasta_file;
// - vcf_file;
// - mu: mutation rate total;
// - mut_file: mutation to read file from. 
//initializeMutationRate(2.36e-8);
initialize() {
	initializeSLiMOptions(nucleotideBased=T);
	defineConstant("L", initializeAncestralNucleotides(fasta_file));
	initializeMutationTypeNuc("m1", 0.5, "f", 0.0);

	mm = mm16To256(mmJukesCantor(mu / 3));
	//mut_file
	file_mut= readFile(mut_file);
	for (line in file_mut)
	{
		line=strsplit(line,sep= '\t');
		mut=line[0];
		catn(mut);
		mut_idx= nucleotidesToCodons(mut);
		rates= strsplit(line[1],sep= ',');
		for (r in 0:3)
		{
			mm[mut_idx,r]= asFloat(rates[r]);
		}
	}

	initializeGenomicElementType("g1", m1, 1.0, mutationMatrix=mm);
	initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(1e-8);
}

1 {

    sim.addSubpop("p0", 802470);
    c = sim.chromosome;
    catn("Ancestral: " + paste(c.ancestralNucleotides(format="char")[0:20],sep=""));
    catn();
}


50000 {
	sim.addSubpopSplit("p5", 24428, p0);
	sim.addSubpopSplit("p1234", 209368, p0);
	p0.setSubpopulationSize(0);
}


62949 {
	sim.addSubpopSplit("p4", 34831, p1234);
	sim.addSubpopSplit("p123", 11340, p1234);
	p1234.setSubpopulationSize(0);
	p5.setMigrationRates(c(p4), c(4.411453180654584e-05));
	p4.setMigrationRates(c(p5), c(9.203050709059588e-06));
}


73015 {
	sim.addSubpopSplit("p3", 10544, p123);
	sim.addSubpopSplit("p12", 59661, p123);
	p123.setSubpopulationSize(0);
}


79371 {
	sim.addSubpopSplit("p1", 1324, p12);
	sim.addSubpopSplit("p2", 5299, p12);
	p12.setSubpopulationSize(0);
	p5.setMigrationRates(c(p2), c(2.702978772597113e-05));
	p4.setMigrationRates(c(p1), c(1.0453511837083531e-05));
	p4.setMigrationRates(c(p2), c(1.259717439079911e-05));
	p1.setMigrationRates(c(p2), c(7.248313564040705e-06));
	p1.setMigrationRates(c(p4), c(2.753394691884316e-06));
	p2.setMigrationRates(c(p1), c(0.0005035675815288814));
	p2.setMigrationRates(c(p3), c(7.565228030283265e-05));
	p2.setMigrationRates(c(p4), c(3.1088445210604925e-05));
	p2.setMigrationRates(c(p5), c(2.3529990186010434e-05));
}

83038 late() {

    g = c();
    pops= 0:4;
    samples= c(500,500,500,500,500);
    for (x in pops) 
        g= c(g, sim.subpopulations[x].sampleIndividuals(samples[x]).genomes);

    g.outputVCF(vcf_file,simplifyNucleotides=T);
    
}
